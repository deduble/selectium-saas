# High-Performance Nginx Configuration for Selextract Cloud
# Optimized for production workloads with load balancing and caching

# Main context optimizations
user nginx;
worker_processes auto;
worker_rlimit_nofile 100000;
pid /var/run/nginx.pid;

# Events block - optimized for high concurrency
events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
    accept_mutex off;
}

http {
    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 30;
    keepalive_requests 1000;
    reset_timedout_connection on;
    client_body_timeout 10;
    send_timeout 10;
    
    # Buffer optimizations
    client_max_body_size 50M;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Brotli compression (if module available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    # Open file cache
    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=tasks:10m rate=20r/s;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn_zone $server_name zone=perserver:10m;
    
    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; font-src 'self' data:; img-src 'self' data: https:; connect-src 'self' https:;" always;
    
    # Hide Nginx version
    server_tokens off;
    
    # SSL optimization
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Logging optimizations
    log_format main_performance '$remote_addr - $remote_user [$time_local] "$request" '
                               '$status $body_bytes_sent "$http_referer" '
                               '"$http_user_agent" "$http_x_forwarded_for" '
                               'rt=$request_time ut="$upstream_response_time" '
                               'cs=$upstream_cache_status';
    
    access_log /var/log/nginx/access.log main_performance buffer=64k flush=5s;
    error_log /var/log/nginx/error.log warn;
    
    # Upstream configuration for API servers
    upstream api_backend {
        least_conn;
        server api:8000 max_fails=3 fail_timeout=30s weight=1;
        # Add more API servers here for horizontal scaling
        # server api2:8000 max_fails=3 fail_timeout=30s weight=1;
        keepalive 32;
    }
    
    # Upstream configuration for frontend servers
    upstream frontend_backend {
        least_conn;
        server frontend:3000 max_fails=3 fail_timeout=30s weight=1;
        # Add more frontend servers here for horizontal scaling
        # server frontend2:3000 max_fails=3 fail_timeout=30s weight=1;
        keepalive 32;
    }
    
    # Cache configuration
    proxy_cache_path /var/cache/nginx/api levels=1:2 keys_zone=api_cache:100m inactive=60m max_size=1g;
    proxy_cache_path /var/cache/nginx/static levels=1:2 keys_zone=static_cache:100m inactive=7d max_size=2g;
    
    # Main server block
    server {
        listen 80;
        listen [::]:80;
        server_name selextract.com www.selextract.com;
        
        # Redirect HTTP to HTTPS
        return 301 https://$server_name$request_uri;
    }
    
    # Main HTTPS server
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name selextract.com www.selextract.com;
        
        # SSL certificate configuration
        ssl_certificate /etc/letsencrypt/live/selextract.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/selextract.com/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/selextract.com/chain.pem;
        
        # Connection limits
        limit_conn perip 20;
        limit_conn perserver 1000;
        
        # Root and index
        root /var/www/html;
        index index.html index.htm;
        
        # API routes with caching and optimization
        location /api/ {
            # Rate limiting for API
            limit_req zone=api burst=20 nodelay;
            
            # Proxy settings
            proxy_pass http://api_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            
            # Cache configuration for GET requests
            proxy_cache api_cache;
            proxy_cache_methods GET HEAD;
            proxy_cache_valid 200 302 10m;
            proxy_cache_valid 404 1m;
            proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
            proxy_cache_lock on;
            
            # Cache bypass for authenticated requests
            proxy_cache_bypass $http_authorization;
            proxy_no_cache $http_authorization;
            
            # Add cache status header
            add_header X-Cache-Status $upstream_cache_status always;
        }
        
        # Authentication endpoints with special rate limiting
        location /api/v1/auth/ {
            limit_req zone=auth burst=10 nodelay;
            
            proxy_pass http://api_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # No caching for auth endpoints
            proxy_no_cache 1;
            proxy_cache_bypass 1;
            
            # Shorter timeouts for auth
            proxy_connect_timeout 3s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # Task management endpoints
        location /api/v1/tasks/ {
            limit_req zone=tasks burst=30 nodelay;
            
            proxy_pass http://api_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Extended timeout for task operations
            proxy_connect_timeout 5s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
            
            # No caching for task operations
            proxy_no_cache 1;
            proxy_cache_bypass 1;
        }
        
        # WebSocket support for real-time features
        location /ws/ {
            proxy_pass http://api_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket specific timeouts
            proxy_connect_timeout 7s;
            proxy_send_timeout 3600s;
            proxy_read_timeout 3600s;
            
            # Disable buffering for WebSockets
            proxy_buffering off;
        }
        
        # Frontend application
        location / {
            # Try files first, then proxy to frontend app
            try_files $uri $uri/ @frontend;
        }
        
        # Frontend proxy
        location @frontend {
            proxy_pass http://frontend_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Frontend timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # Static assets with aggressive caching
        location ~* \.(css|js|jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # Try local files first, then proxy
            try_files $uri @frontend;
            
            # Compression for static assets
            gzip_static on;
        }
        
        # Next.js static files
        location /_next/static/ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            proxy_pass http://frontend_backend;
            
            # Cache static assets
            proxy_cache static_cache;
            proxy_cache_valid 200 30d;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Nginx status for monitoring
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }
        
        # Security: block common attacks
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        location ~ /\.ht {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Block common bot requests
        location ~ /(wp-admin|wp-login|xmlrpc|phpmyadmin) {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Favicon handling
        location = /favicon.ico {
            log_not_found off;
            access_log off;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # Robots.txt
        location = /robots.txt {
            log_not_found off;
            access_log off;
        }
    }
}

# Stream block for TCP/UDP load balancing (if needed)
# stream {
#     upstream redis_backend {
#         server redis:6379 max_fails=3 fail_timeout=30s;
#     }
#     
#     server {
#         listen 6379;
#         proxy_pass redis_backend;
#         proxy_timeout 3s;
#         proxy_responses 1;
#     }
# }