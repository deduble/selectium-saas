# Production overrides for docker-compose.yml
# Use with: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

services:
  # Production overrides for existing services
  selextract-postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: selextract
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped

  selextract-redis:
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    restart: unless-stopped

  selextract-api:
    environment:
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD}@selextract-postgres:5432/selextract
      REDIS_URL: redis://:${REDIS_PASSWORD}@selextract-redis:6379/0
      ENVIRONMENT: production
      DEBUG: false
    ports:
      - "8000:8000"
    depends_on:
      selextract-postgres:
        condition: service_healthy
      selextract-redis:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
      - ./results:/app/results

  selextract-worker:
    environment:
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD}@selextract-postgres:5432/selextract
      REDIS_URL: redis://:${REDIS_PASSWORD}@selextract-redis:6379/0
      ENVIRONMENT: production
    depends_on:
      selextract-postgres:
        condition: service_healthy
      selextract-redis:
        condition: service_healthy
    restart: unless-stopped
    shm_size: '2gb'  # Important for Playwright browsers
    healthcheck:
      test: ["CMD", "celery", "-A", "worker.main", "inspect", "ping"]

  selextract-frontend:
    environment:
      NEXT_PUBLIC_API_URL: https://api.selextract.com
      NEXTAUTH_URL: https://app.selextract.com
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      NODE_ENV: production
    ports:
      - "3000:3000"
    restart: unless-stopped

  selextract-nginx:
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/sites-available:/etc/nginx/sites-available:ro
      - ./nginx/sites-enabled:/etc/nginx/sites-enabled:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - selextract-api
      - selextract-frontend
    restart: unless-stopped

  # Production-only monitoring services
  prometheus:
    image: prom/prometheus:latest
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
      - '--web.external-url=https://monitoring.selextract.com/prometheus/'
      - '--web.route-prefix=/'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/alert_rules.yml:/etc/prometheus/alert_rules.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - selextract-internal
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '2G'
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  grafana:
    image: grafana/grafana:latest
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD}
      GF_USERS_ALLOW_SIGN_UP: 'false'
      GF_SERVER_ROOT_URL: https://monitoring.selextract.com/grafana/
      GF_SERVER_SERVE_FROM_SUB_PATH: 'true'
      GF_SECURITY_ADMIN_USER: ${GRAFANA_ADMIN_USER}
      GF_INSTALL_PLUGINS: grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
      - ./logs/grafana:/var/log/grafana
    ports:
      - "3002:3000"
    networks:
      - selextract-internal
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '2G'
    restart: unless-stopped
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  alertmanager:
    image: prom/alertmanager:latest
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=https://monitoring.selextract.com/alertmanager/'
      - '--web.route-prefix=/'
    volumes:
      - ./monitoring/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - ./logs/alertmanager:/var/log/alertmanager
    ports:
      - "9093:9093"
    networks:
      - selextract-internal
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '1G'
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9093/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    environment:
      DATA_SOURCE_NAME: postgresql://postgres:${POSTGRES_PASSWORD}@selextract-postgres:5432/selextract?sslmode=disable
    ports:
      - "9187:9187"
    networks:
      - selextract-internal
    depends_on:
      - selextract-postgres
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: '256M'
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9187/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis-exporter:
    image: oliver006/redis_exporter:latest
    environment:
      REDIS_ADDR: redis://selextract-redis:6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - "9121:9121"
    networks:
      - selextract-internal
    depends_on:
      - selextract-redis
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: '256M'
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9121/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3
