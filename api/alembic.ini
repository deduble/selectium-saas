# Alembic configuration for Selextract Cloud Database Versioning
# This configuration follows the production-ready standards defined in rules.md

[alembic]
# Path to migration scripts
script_location = alembic

# Database URL - will be overridden by env.py using environment variables
# This is just a template - actual connection comes from DATABASE_URL environment variable
sqlalchemy.url = postgresql://selextract:password@localhost:5432/selextract

# Path to the sqlalchemy.ini file, which contains our database configuration
# If this file doesn't exist, alembic will use environment variables instead
#sqlalchemy.ini_file = 

# Timezone for timestamps in migration filenames
# timezone = 

# Template used to generate migration file names
file_template = %%(year)d%%(month).2d%%(day).2d_%%(hour).2d%%(minute).2d_%%(second).2d_%%(rev)s_%%(slug)s

# Revision format - supports "branchless" versioning
# revision_environment = false

# Truncate slug to specified length 
# truncate_slug_length = 40

# Set to 'true' to run the environment during
# the 'revision' command, regardless of autogenerate
# revision_environment = false

# Set to 'true' to allow .pyc and .pyo files without
# a source .py file to be detected as revisions in the
# versions/ directory
# sourceless = false

# Version locations (supports multiple locations)
# version_locations = %(here)s/bar:%(here)s/bat:alembic/versions

# Version path separator
# version_path_separator = :

# Output encoding used when revision files are written from script.py.mako
# output_encoding = utf-8

[post_write_hooks]
# Post-write hooks define scripts or Python functions that are run
# on newly generated revision scripts. 
# Uncomment the line below to enable format with black formatter
hooks = black
black.type = console_scripts
black.entrypoint = black
black.options = --line-length 88

[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S